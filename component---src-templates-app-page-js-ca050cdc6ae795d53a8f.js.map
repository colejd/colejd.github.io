{"version":3,"file":"component---src-templates-app-page-js-ca050cdc6ae795d53a8f.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/components/structured-data.js","webpack://gatsby-starter-default/./src/components/carousel.js","webpack://gatsby-starter-default/./src/templates/app-page.js","webpack://gatsby-starter-default/./src/utils/path-utils.js"],"sourcesContent":["import * as React from \"react\"\nimport { Helmet } from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { concatPaths } from \"../utils/path-utils\"\n\nlet jon = {\n  \"@type\": \"Person\",\n  name: \"Jonathan Cole\",\n  givenName: \"Jonathan\",\n  familyName: \"Cole\",\n  sameAs: [\"https://github.com/colejd\"],\n}\n\nexport function AppPageStructuredData({ app, debug }) {\n  let schemaApp = {\n    \"@context\": \"https://schema.org\",\n    \"@type\": \"SoftwareApplication\", // https://github.com/schemaorg/schemaorg/issues/635#issuecomment-790048516\n    name: app.frontmatter.appName,\n    operatingSystem: app.frontmatter.appPlatform,\n    applicationCategory: app.frontmatter.appCategory,\n    offers: {\n      \"@type\": \"Offer\",\n      price: app.frontmatter.appPrice,\n      priceCurrency: \"USD\",\n    },\n  }\n\n  return (\n    <>\n      {debug === true && (\n        <pre>\n          <b>JSON-LD:</b>\n          <br />\n          {JSON.stringify(schemaApp, null, 2)}\n        </pre>\n      )}\n      <Helmet>\n        {\n          <script type=\"application/ld+json\">\n            {JSON.stringify(schemaApp)}\n          </script>\n        }\n      </Helmet>\n    </>\n  )\n}\n\nexport function BlogPostStructuredData({ post, debug }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            language\n            siteUrl\n          }\n        }\n      }\n    `\n  )\n  const metadata = site.siteMetadata\n\n  let schemaArticle = {\n    \"@context\": \"http://schema.org\",\n    \"@type\": \"BlogPosting\",\n\n    mainEntityOfPage: {\n      \"@type\": \"WebPage\",\n      \"@id\": concatPaths(metadata.siteUrl, post.fields.slug || \"\"),\n    },\n\n    // Article metadata\n    inLanguage: metadata.language,\n    author: jon,\n    publisher: {\n      ...jon,\n      logo: {\n        \"@type\": \"ImageObject\",\n        url: concatPaths(metadata.siteUrl, `/assets/images/avatar.png`),\n      },\n    },\n\n    // Article information\n    datePublished: post.frontmatter.date,\n    dateModified: post.frontmatter.dateModified,\n    isAccessibleForFree: true,\n    keywords: post.frontmatter.keywords,\n    headline: post.frontmatter.title,\n    description: post.frontmatter.description || post.excerpt,\n    // wordCount: post.fields.readingTime.words,\n    // timeRequired: msToISO601Duration(post.fields.readingTime.time), // ISO 8601 Duration format\n  }\n\n  // Add image to schema if available\n  if (post.frontmatter.coverPhoto != null) {\n    schemaArticle.image = {\n      \"@type\": \"ImageObject\",\n      url: concatPaths(metadata.siteUrl, post.frontmatter.coverPhoto.publicURL),\n    }\n  }\n  return (\n    <>\n      {debug === true && (\n        <pre>\n          <b>JSON-LD:</b>\n          <br />\n          {JSON.stringify(schemaArticle, null, 2)}\n        </pre>\n      )}\n      <Helmet>\n        {\n          <script type=\"application/ld+json\">\n            {JSON.stringify(schemaArticle)}\n          </script>\n        }\n      </Helmet>\n    </>\n  )\n}\n\n/**\n * Converts the given amount of milliseconds to an ISO 8601 Duration string.\n * See https://en.wikipedia.org/wiki/ISO_8601#Durations for more.\n * @param {*} ms Milliseconds\n * @returns ISO 8601 Duration string\n */\nfunction msToISO601Duration(ms) {\n  let remaining = Math.round(ms / 1000) // Convert from ms to seconds\n\n  let hoursComponent = Math.floor(remaining / 3600)\n  remaining = remaining % 3600\n\n  let minutesComponent = Math.floor(remaining / 60)\n  remaining = remaining % 60\n\n  let secondsComponent = remaining\n\n  return `PT${hoursComponent}H${minutesComponent}M${secondsComponent}S`\n}\n\n// /**\n//  * Converts the given time in milliseconds to a human-readable time-to-read string, e.g. `\"N hours, N minutes\"`.\n//  * @param {*} ms Milliseconds\n//  * @returns String in format `\"N minutes\"` if minutes < 60, otherwise `\"N hours, N minutes\"`\n//  */\n// function msToHumanReadableDuration(ms) {\n//   let remaining = Math.round(ms / 1000) // Convert from ms to seconds\n\n//   let hoursComponent = Math.floor(remaining / 3600)\n//   remaining = remaining % 3600\n\n//   let minutesComponent = Math.floor(remaining / 60)\n//   remaining = remaining % 60\n\n//   // let secondsComponent = remaining\n\n//   let components = []\n//   if (hoursComponent !== 0) components.push(`${hoursComponent} hours`)\n//   if (minutesComponent !== 0) components.push(`${minutesComponent} minutes`)\n\n//   return components.join(\", \")\n// }\n","import React from \"react\"\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\"\n\nimport \"./carousel.css\"\n\nconst Carousel = (props) => (\n  <div class=\"screenshots\">\n    {\n      props.images.map ((image, index) => {\n        // return <img key={index} src={image.publicURL} alt=\"\" />\n        const imageData = getImage(image)\n        return <a href={image.publicURL}>\n          <GatsbyImage key={index} image={imageData} alt=\"\" className=\"screenshot\" loading=\"eager\" objectFit=\"contain\"/>\n        </a>\n      })\n    }\n  </div>\n)\nexport default Carousel\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { AppPageStructuredData } from \"../components/structured-data\"\nimport Carousel from \"../components/carousel\"\n\nimport { concatPaths } from \"../utils/path-utils\"\n\nclass AppPageTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n    // const { previous, next } = this.props.pageContext\n\n    let additionalSEOMeta = {}\n    if (post.frontmatter.images.length > 0) {\n      let coverPhotoFullPath = concatPaths(this.props.data.site.siteMetadata.siteUrl, post.frontmatter.images[0].publicURL)\n      additionalSEOMeta[\"twitter:card\"] = \"summary_large_image\"\n      additionalSEOMeta[\"twitter:image\"] = coverPhotoFullPath\n      additionalSEOMeta[\"og:image\"] = coverPhotoFullPath\n    }\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title={post.frontmatter.title}\n          description={post.frontmatter.description || post.excerpt}\n          meta={additionalSEOMeta}\n        />\n\n        <AppPageStructuredData app={post} debug={false} />\n\n        <article className=\"prose-slate\">\n          <header>\n            <h1 className=\"text-3xl columnbreak:text-5xl mb-0\">\n              {post.frontmatter.title}\n            </h1>\n            <p className=\"text-sm leading-loose mb-8 \">\n              {post.frontmatter.date}\n            </p>\n          </header>\n          {/* {post.frontmatter.images.map(image => image.publicURL)} */}\n\n          <div className=\"mb-8\">\n            <Carousel images={post.frontmatter.images}/>\n          </div>\n\n          <section\n            className=\"markdown\"\n            dangerouslySetInnerHTML={{ __html: post.html }}\n          />\n        </article>\n      </Layout>\n    )\n  }\n}\n\nexport default AppPageTemplate\n\nexport const pageQuery = graphql`\n  query AppPageBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        siteUrl\n        title\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        description\n        images {\n          publicURL\n          childImageSharp {\n            id\n            gatsbyImageData(\n              height: 400\n              placeholder: BLURRED\n              layout: CONSTRAINED\n              formats: [AUTO, WEBP, AVIF]\n              transformOptions: {\n                fit: INSIDE\n              }\n            )\n          }\n        }\n        appName\n        appCategory\n        appPlatform\n        appPrice\n      }\n    }\n  }\n`","/**\n * Concatenate the given path strings, preventing \"//\" in the middle.\n */\nexport function concatPaths(path1, path2) {\n  // Remove trailing slash\n  if (path1.charAt(path1.length - 1) === \"/\") {\n    path1 = path1.substring(0, path1.length - 1)\n  }\n  // Remove leading slash\n  if (path2[0] === \"/\") {\n    path2 = path2.substring(1)\n  }\n  return `${path1}/${path2}`\n}\n"],"names":["jon","name","givenName","familyName","sameAs","AppPageStructuredData","app","debug","schemaApp","frontmatter","appName","operatingSystem","appPlatform","applicationCategory","appCategory","offers","price","appPrice","priceCurrency","JSON","stringify","type","BlogPostStructuredData","post","metadata","useStaticQuery","site","siteMetadata","schemaArticle","mainEntityOfPage","concatPaths","siteUrl","fields","slug","inLanguage","language","author","publisher","logo","url","datePublished","date","dateModified","isAccessibleForFree","keywords","headline","title","description","excerpt","coverPhoto","image","publicURL","props","class","images","map","index","imageData","getImage","href","G","key","alt","className","loading","objectFit","AppPageTemplate","render","this","data","markdownRemark","siteTitle","additionalSEOMeta","length","coverPhotoFullPath","location","meta","dangerouslySetInnerHTML","__html","html","React","path1","path2","charAt","substring"],"sourceRoot":""}